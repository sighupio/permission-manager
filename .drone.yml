kind: pipeline
type: docker
name: build

platform:
  os: linux
  arch: amd64

clone:
  disable: true

trigger:
  event:
    - push
    - pull_request
  action:
    exclude:
      - synchronized
  branch: 
    exclude:
      - main

steps:
  - name: clone
    image: alpine/git
    commands:
      - git clone https://github.com/sighupio/permission-manager .
      - git checkout $DRONE_COMMIT
      - git fetch --tags

  - name: unit-test
    image: golang:1.19
    pull: always
    commands:
      - apt-get update && apt-get install -y npm=7.5.2+ds-2
      - npm install -g yarn@1.22.11
      - make dependencies ui test

---
kind: pipeline
type: docker
name: preview

platform:
  os: linux
  arch: amd64

clone:
  disable: true

trigger:
  branch:
    - main
  action:
    exclude:
      - synchronized

steps:
  - name: clone
    image: alpine/git
    commands:
      - git clone https://github.com/sighupio/permission-manager .
      - git checkout $DRONE_COMMIT
      - git fetch --tags

  - name: unit-test
    image: golang:1.19
    pull: always
    commands:
      - apt-get update && apt-get install -y npm=7.5.2+ds-2
      - npm install -g yarn@1.22.11
      - make dependencies ui test

  - name: registry-sha
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    environment:
      USER:
        from_secret: quay_username
      TOKEN:
        from_secret: quay_password
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login -p $TOKEN -u $USER quay.io
      - apk add git
      - docker run --rm --privileged tonistiigi/binfmt --install all
      - docker buildx create --name sighup-builder
      - docker buildx use sighup-builder
      - docker buildx inspect --bootstrap
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t "quay.io/sighup/permission-manager:${DRONE_COMMIT_SHA}" --push .
    depends_on:
      - unit-test

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: release

platform:
  os: linux
  arch: amd64

clone:
  disable: true

trigger:
  branch:
    - main
  event:
    - tag

steps:
  - name: registry-tag
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    environment:
      USER:
        from_secret: quay_username
      TOKEN:
        from_secret: quay_password
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login -p $TOKEN -u $USER quay.io
      - apk add git
      - docker run --rm --privileged tonistiigi/binfmt --install all
      - docker buildx create --name sighup-builder
      - docker buildx use sighup-builder
      - docker buildx inspect --bootstrap
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t "quay.io/sighup/permission-manager:${DRONE_TAG}" --push .

  - name: release
    image: golang
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - git checkout .
      - git clean -f
      - curl -sL https://git.io/goreleaser | bash
      
---
name: release-helm-chart
kind: pipeline
type: docker

trigger:
  ref:
    include:
      # Trigger the Helm Chart Releaser only when tagging
      - refs/tags/**
    exclude:
      # These kind of tags are generated by `cr` in this pipeline
      # we exclude them to avoid a loop.
      - refs/tags/permission-manager-*

steps:
  # We need to manually fetch the gh-pages branch because Drone by default
  # only checksout the current branch with a minimal depth
  # see: https://docs.drone.io/pipeline/docker/syntax/cloning/
  - name: fetch-gh-pages-branch
    image: alpine/git
    commands:
      - git fetch origin gh-pages

  # We use GitHub Pages as Helm Repository and `cr` (Chart Releaser)
  # to help us publish the chart.
  - name: chart-releaser
    image: quay.io/helmpack/chart-releaser:v1.5.0
    environment:
      CR_OWNER: sighupio
      CR_GIT_REPO: permission-manager
      CR_TOKEN:
        from_secret: c3p0
    commands:
      # For some reason we need to manually create the folder each time
      # see: https://github.com/helm/chart-releaser/issues/187
      - mkdir -p .cr-index
      # Package the chart into a tar.gz
      - cr package ./chart
      # Upload the tar.gz to a GitHub release
      - cr upload --skip-existing
      # Update the index.yaml and push it to GitHub Pages
      - cr index --push

---
kind: pipeline
type: docker
name: e2e

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - pull_request
    - push
  action:
    exclude:
      - synchronized
  branch:
    exclude:
      - dependabot/**
      - main

steps:
  - name: Kubernetes v1.23
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r1 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.23 tests
      - CLUSTER_NAME=e2e CLUSTER_VERSION=1.23.13 KIND_VERSION=0.17.0 make test-e2e-ci

  - name: Kubernetes v1.24
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r1 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.24 tests
      - CLUSTER_NAME=e2e CLUSTER_VERSION=1.24.7 KIND_VERSION=0.17.0 make test-e2e-ci

  - name: Kubernetes v1.25
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r1 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.25 tests
      - CLUSTER_NAME=e2e CLUSTER_VERSION=1.25.3 KIND_VERSION=0.17.0 make test-e2e-ci

  - name: Kubernetes v1.26
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r1 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.26 tests
      - CLUSTER_NAME=e2e CLUSTER_VERSION=1.26.0 KIND_VERSION=0.17.0 make test-e2e-ci

volumes:
  - name: dockerconfig
    host:
      path: /root/.docker/config.json
  - name: dockersock
    host:
      path: /var/run/docker.sock
