# Default values for permission-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/sighup/permission-manager 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.7.1-rc1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

# Default values should not be used currently. It will result in a startup-error.
# TODO: correct default values should be placed here.
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80 

#
# Ingress:
# - If you want to use a specific ingress controller, just uncomment "kubernetes.io/ingress.class" and type the name of your ingress class.
# - If you want to use TLS (https) for the web interface, just uncomment the "tls" part and add create the secret in the correct namespace.
# - If you're using cert-manager.io to provision your certificates, just uncomment "cert-manager.io/cluster-issuer" and type the name of your cluster-issuer. Please also uncomment the "tls" part with default values.
ingress:
  enabled: false 
  annotations: 
   # kubernetes.io/ingress.class: nginx
   # cert-manager.io/cluster-issuer: my-cluster-issuer
  hosts:
    - host: permission-manager.domain.com 
      paths:
        - path: /
          pathType: ImplementationSpecific
 # tls:  
 #   - secretName: permission-manager-tls
 #     hosts:
 #       - permission-manager.domain.com 

#
# Ressources:
# The values already adjusted for a small permission-manager setup. Increase value if needed.
# It's recommended to use ressource limits, just uncomment and try out. To use autosacling, ressources are required.
resources: {}
  # Adjust lines as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 10m
  #   memory: 80Mi
  # requests:
  #   cpu: 10m
  #   memory: 80Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#
# Application configuration:
config: 

  # Can be found in /etc/kubernetes/admin.conf: clusters -> cluster -> name
  clusterName: "" 
  
  # Can be found in /etc/kubernetes/admin.conf: clusters -> cluster -> server
  controlePlaneAddress: "" 

  # Random password to login to web-app. PLEASE CHANGE!
  basicAuthPassword: RrXwZSBdTXhQL6 
