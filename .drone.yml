---
kind: pipeline
type: docker
name: qa

platform:
  os: linux
  arch: amd64

clone:
  disable: true

trigger:
  event:
    - push
    - pull_request
  action:
    exclude:
      - synchronized
  branch:
    exclude:
      - main
      - gh-pages

steps:
  - name: clone
    image: alpine/git
    commands:
      - git clone https://github.com/sighupio/permission-manager .
      - git checkout $DRONE_COMMIT
      - git fetch --tags
  - name: lint files
    image: cytopia/file-lint:latest-0.8
    commands:
      - apk update
      - apk add make
      - make lint-files
  - name: lint shells
    image: koalaman/shellcheck-alpine:v0.9.0
    commands:
      - apk update
      - apk add make
      - make lint-shells
  - name: lint yamls
    image: cytopia/yamllint:1
    commands:
      - apk update
      - apk add make
      - make lint-yamls
  # - name: lint jsons
  #   image: cytopia/jsonlint:1.6.0
  #   commands:
  #     - apk update
  #     - apk add make
  #     - make lint-jsons
  - name: lint markdowns
    image: davidanson/markdownlint-cli2:v0.6.0
    commands:
      - apk add make
      - make lint-markdowns
  - name: lint makefile
    image: cytopia/checkmake:latest-0.5
    commands:
      - apk update
      - apk add make
      - make lint-makefile
  - name: lint dockerfile
    image: hadolint/hadolint:v2.12.0
    commands:
      - apk update
      - apk add make
      - make lint-dockerfile
  - name: lint helm chart
    image: quay.io/helmpack/chart-testing:v3.5.0
    commands:
      - apk update
      - apk add make
      - make lint-helm

  # - name: unit-test
  #   image: golang:1.19
  #   pull: always
  #   commands:
  #     - apt-get update && apt-get install -y npm=7.5.2+ds-2
  #     - npm install -g yarn@1.22.11
  #     - cd web-client && yarn install && cd ..
  #     - make build-ui
  #     - cp -r ./web-client/build ./static/
  #     - make test

---
kind: pipeline
type: docker
name: preview

platform:
  os: linux
  arch: amd64

clone:
  disable: true

trigger:
  branch:
    - main
  action:
    exclude:
      - synchronized
  event:
    exclude:
      - tag
  paths:
    exclude:
      - "helm_chart/**"

steps:
  - name: clone
    image: alpine/git
    commands:
      - git clone https://github.com/sighupio/permission-manager .
      - git checkout $DRONE_COMMIT
      - git fetch --tags

  - name: unit-test
    image: golang:1.19
    pull: always
    commands:
      - make test

  - name: registry-sha
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    environment:
      USER:
        from_secret: quay_username
      TOKEN:
        from_secret: quay_password
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login -p $TOKEN -u $USER quay.io
      - apk add git
      - docker run --rm --privileged tonistiigi/binfmt --install all
      - docker buildx create --name sighup-builder
      - docker buildx use sighup-builder
      - docker buildx inspect --bootstrap
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t "quay.io/sighup/permission-manager:${DRONE_COMMIT_SHA}" --push .
    depends_on:
      - unit-test

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: release

platform:
  os: linux
  arch: amd64

clone:
  disable: true

trigger:
  branch:
    - main
  ref:
    # Trigger the Permission Manager release only when tagging
    - refs/tags/v*.*.*

steps:
  - name: clone
    image: alpine/git
    commands:
      - git clone https://github.com/sighupio/permission-manager .
      - git checkout $DRONE_COMMIT
      - git fetch --tags

  - name: registry-tag
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    environment:
      USER:
        from_secret: quay_username
      TOKEN:
        from_secret: quay_password
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker login -p $TOKEN -u $USER quay.io
      - apk add git
      - docker run --rm --privileged tonistiigi/binfmt --install all
      - docker buildx create --name sighup-builder
      - docker buildx use sighup-builder
      - docker buildx inspect --bootstrap
      - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t "quay.io/sighup/permission-manager:${DRONE_TAG}" --push .

  - name: release
    image: golang
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - git checkout .
      - git clean -f
      - curl -sL https://git.io/goreleaser | bash

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: release-helm-chart
kind: pipeline
type: docker

trigger:
  branch:
    - main
  paths:
    - helm_chart/**

steps:
  # We need to manually fetch the gh-pages branch because Drone by default
  # only checksout the current branch with a minimal depth
  # see: https://docs.drone.io/pipeline/docker/syntax/cloning/
  - name: fetch-gh-pages-branch
    image: alpine/git:2.36.3
    commands:
      - git fetch origin gh-pages

  # We use GitHub Pages as Helm Repository and `cr` (Chart Releaser)
  # to help us publish the chart.
  - name: chart-releaser
    image: quay.io/helmpack/chart-releaser:v1.5.0
    environment:
      CR_OWNER: sighupio
      CR_GIT_REPO: permission-manager
      CR_TOKEN:
        from_secret: c3p0
    commands:
      # For some reason we need to manually create the folder each time
      # see: https://github.com/helm/chart-releaser/issues/187
      - mkdir -p .cr-index
      # Package the chart into a tar.gz
      - cr package ./helm_chart
      # Upload the tar.gz to a GitHub release
      - cr upload --skip-existing --release-name-template "helm-chart-v{{ .Version }}"
      # Update the index.yaml and push it to GitHub Pages
      - cr index --release-name-template "helm-chart-v{{ .Version }}" --push
      # Assign a nicer-looking name to the release
      - apk add curl jq yq
      - ./scripts/rename-helm-release.sh $CR_TOKEN

---
kind: pipeline
type: docker
name: e2e

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - pull_request
    - push
  action:
    exclude:
      - synchronized
  branch:
    exclude:
      - dependabot/**
      - gh-pages
      - main
  paths:
    exclude:
      - "helm_chart/**"

steps:
  - name: Kubernetes v1.23
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r2 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.23 tests
      - CLUSTER_VERSION=1.23.13 KIND_VERSION=0.17.0 HELM_VERSION=3.11.1 make test-e2e

  - name: Kubernetes v1.24
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r2 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.24 tests
      - CLUSTER_VERSION=1.24.7 KIND_VERSION=0.17.0 HELM_VERSION=3.11.1 make test-e2e

  - name: Kubernetes v1.25
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r2 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.25 tests
      - CLUSTER_VERSION=1.25.3 KIND_VERSION=0.17.0 HELM_VERSION=3.11.1 make test-e2e

  - name: Kubernetes v1.26
    image: docker:23.0.0-rc.2-dind-alpine3.17
    pull: always
    network_mode: host
    volumes:
      - name: dockerconfig
        path: /root/.docker/config.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      # Core dependencies
      - apk add util-linux bash make git bats jq=1.6-r2 yq=4.30.4-r2 gettext
      # Cypress dependencies
      - apk add nodejs=18.12.1-r0 npm=9.1.2-r0 yarn=1.22.19-r0
      # Execute 1.26 tests
      - CLUSTER_VERSION=1.26.0 KIND_VERSION=0.17.0 HELM_VERSION=3.11.1 make test-e2e

volumes:
  - name: dockerconfig
    host:
      path: /root/.docker/config.json
  - name: dockersock
    host:
      path: /var/run/docker.sock
