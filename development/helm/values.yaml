# Default values for permission-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

---
replicaCount: 1

image:
  repository: permission-manager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: local-dev

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

# Default values should not be used currently. It will result in a startup-error.
# TODO: correct default values should be placed here.
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  nodePort: null

# Ingress:
# yamllint disable-line rule:line-length
# - If you want to use a specific ingress controller, just uncomment "kubernetes.io/ingress.class" and type the name of your ingress class.
# yamllint disable-line rule:line-length
# - If you want to use TLS (https) for the web interface, just uncomment the "tls" part and add create the secret in the correct namespace.
# yamllint disable-line rule:line-length
# - If you're using cert-manager.io to provision your certificates, just uncomment "cert-manager.io/cluster-issuer" and type the name of your cluster-issuer. Please also uncomment the "tls" part with default values.
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: my-cluster-issuer
  hosts:
    - host: permission-manager.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: permission-manager.dev-tls
      hosts:
        - permission-manager.dev

# Ressources:
# The values already adjusted for a small permission-manager setup. Increase value if needed.
# It's recommended to use ressource limits, just uncomment and try out. To use autosacling, ressources are required.
resources:
  {}
  # Adjust lines as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 10m
  #   memory: 80Mi
  # requests:
  #   cpu: 10m
  #   memory: 80Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

#
# Application configuration:
config:
  # Can be found in /etc/kubernetes/admin.conf: clusters -> cluster -> name
  clusterName: "kind"

  # Can be found in /etc/kubernetes/admin.conf: clusters -> cluster -> server
  controlPlaneAddress: ""

  # Password for basic auth to access the UI
  basicAuthPassword: "admin"

  templates:
    - name: operation
      rules:
        - apiGroups:
            - "*"
          resources:
            - "*"
          verbs:
            - "*"

    - name: developer
      rules:
        - apiGroups:
            - "*"
          resources:
            - "configmaps"
            - "endpoints"
            - "persistentvolumeclaims"
            - "pods"
            - "pods/log"
            - "pods/portforward"
            - "podtemplates"
            - "replicationcontrollers"
            - "resourcequotas"
            - "secrets"
            - "services"
            - "events"
            - "daemonsets"
            - "deployments"
            - "replicasets"
            - "ingresses"
            - "networkpolicies"
            - "poddisruptionbudgets"
          verbs:
            - "*"
